#!/usr/bin/env bash
set -eu
HERE=$(dirname $0)

# uu::command - single command with flags and options

$HERE/cmd 2>&1 | grep "Option 'my-option0' is required!"

$HERE/cmd -h || exit 52
diff <($HERE/cmd --help 2>&1) <(echo "Usage: cmd

     | --my-option0 VAL  | MY_OPTION0      - (required, default:'')
                                             no short
     | --my-option1 VAL  | MY_OPTION1      - (required, default:'')
                                             empty short
  -c | --my-option3 VAL  | MY_OPTION3      - (optional, default:bla)
                                             with default
  -h | --help                              - print help
     | --debug           | DEBUG           - show debug logs
                                             (env DEBUG shows also parsing debug logs)
     | --META                              - print command metadata") || exit 53
DEBUG=1 $HERE/cmd --help || exit 54
UUDEBUG=1 $HERE/cmd --help || exit 55
UUDEBUG=1 DEBUG=1 $HERE/cmd --help || exit 56
$HERE/cmd --help --debug || exit 57
$HERE/cmd --help --uudebug || exit 58

diff <($HERE/cmd --META) <(echo "[meta]
scope=
description=") || exit 59

$HERE/cmd --help | grep 'Usage: cmd'

# --my-option2 is missing here, but it's required, even if it's not listed in help
# so the command fails and says that it's required
$HERE/cmd --my-option0 / --my-option1 / && exit 60 || true
$HERE/cmd --my-option0 / --my-option1 / --my-option2 / || exit 61

# MY_OPTION3 should have default value in that case
( source $HERE/cmd --my-option0 / --my-option1 / --my-option2 / ; [ $MY_OPTION3 == "bla" ] || exit 62 )
# override default value from CLI
( source $HERE/cmd --my-option0 / --my-option1 / --my-option2 / --my-option3 my-value; [ $MY_OPTION3 == "my-value" ] || exit 63 )
( source $HERE/cmd --my-option0 / --my-option1 / --my-option2 / -c my-value; [ $MY_OPTION3 == "my-value" ] || exit 64 )
( source $HERE/cmd --my-option0 / --my-option1 / -b / -c my-value; [ $MY_OPTION3 == "my-value" ] || exit 65 )
# override default value from ENV variable
( MY_OPTION3=my-value && source $HERE/cmd --my-option0 / --my-option1 / --my-option2 / ; [ $MY_OPTION3 == "my-value" ] || exit 66 )
